name: CI

on:
  push:
    branches:
      - main

permissions:
  actions: read
  contents: read
  checks: write

jobs:
  main:
    name: Build and test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - run: npm ci --legacy-peer-deps

      - run: npx nx run-many --target=lint --output-file=eslint-report.json --format=json
        continue-on-error: true

      - name: Build
        run: npx nx run-many -t build

      - name: Test
        run: npx nx run-many -t test --coverage

      - name: Prepare coverage report
        run: |
          node scripts/analyze-coverage/dist/main.js
          echo "COVERAGESTATUS=$(cat tmp/COVERAGESTATUS)" >> $GITHUB_ENV

      - name: Run the action
        uses: guibranco/github-status-action-v2@v1.1.13
        if: env.COVERAGESTATUS == '0'
        with:
          authToken: ${{secrets.GITHUB_TOKEN}}
          context: 'Test coverage results'
          description: 'Successful'
          state: 'success'
          sha: ${{github.event.pull_request.head.sha || github.sha}}

      - name: Run the action
        uses: guibranco/github-status-action-v2@v1.1.13
        if: env.COVERAGESTATUS == '1'
        with:
          authToken: ${{secrets.GITHUB_TOKEN}}
          context: 'Test coverage results'
          description: 'Some branches or functions are not covered with unit tests'
          state: 'failure'
          sha: ${{github.event.pull_request.head.sha || github.sha}}

      - name: Annotate code linting results
        uses: ataylorme/eslint-annotate-action@v3
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          report-json: |
            packages/**/eslint-report.json
            scripts/**/eslint-report.json
          markdown-report-on-step-summary: true
          fail-on-error: true
          fail-on-warning: true
          check-name: 'ESLint results'
