name: CI (Pull Request)

on:
  pull_request:

permissions: read-all

jobs:
  main:
    permissions:
      pull-requests: write
      checks: write
      statuses: write

    name: Build and test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --legacy-peer-deps

      - name: Compute affected projects
        uses: nrwl/nx-set-shas@dbe0650947e5f2c81f59190a38512cf49126fe6b # v4

      - name: Lint
        run: npx nx affected --target=lint -f @microsoft/eslint-formatter-sarif -o results.sarif
        continue-on-error: true

      - name: Collect ESLint results
        run: npx @microsoft/sarif-multitool merge packages/**/*.sarif --recurse true --output-directory=./tmp --output-file=eslint.sarif

      - name: Upload ESLint results
        uses: github/codeql-action/upload-sarif@ce28f5bb42b7a9f2c824e633a3f6ee835bab6858 # v3.29.0
        with:
          # Path to SARIF file relative to the root of the repository
          sarif_file: ./tmp/eslint.sarif
          # Optional category for the results
          # Used to differentiate multiple results for one commit
          category: ESLint

      - name: Build
        run: npx nx affected -t build

      - name: Test
        run: npx nx affected -t test --coverage --changed ${{ github.event.pull_request.base.sha }}

      - name: Build scripts
        run: npx nx run-many -t build --projects=analyze-changes,analyze-coverage,update-pr

      - name: Prepare changelog
        run: |
          node scripts/analyze-changes/dist/main.js --baseRef=${{ github.event.pull_request.base.sha }} --headRef=${{ github.event.pull_request.head.sha }}
          echo "CHANGELEVEL=semver:$(cat tmp/CHANGELEVEL)" >> $GITHUB_ENV
          echo "MODULES=$(cat tmp/MODULES)" >> $GITHUB_ENV

      - name: Prepare coverage report
        run: |
          node scripts/analyze-coverage/dist/main.js
          echo "COVERAGESTATUS=$(cat tmp/COVERAGESTATUS)" >> $GITHUB_ENV

      - name: Create changelog comment
        uses: marocchino/sticky-pull-request-comment@52423e01640425a022ef5fd42c6fb5f633a02728 # v2
        if: env.COVERAGESTATUS == '0'
        with:
          path: tmp/CHANGESET.md
          recreate: true

      - name: Create coverage report comment
        uses: marocchino/sticky-pull-request-comment@52423e01640425a022ef5fd42c6fb5f633a02728 # v2
        if: env.COVERAGESTATUS == '1'
        with:
          path: tmp/COVERAGEREPORT.md
          recreate: true

      - name: Run the action
        uses: guibranco/github-status-action-v2@0849440ec82c5fa69b2377725b9b7852a3977e76 # v1.1.13
        if: env.COVERAGESTATUS == '0'
        with:
          authToken: ${{secrets.GITHUB_TOKEN}}
          context: 'Test coverage results'
          description: 'Successful'
          state: 'success'
          sha: ${{github.event.pull_request.head.sha || github.sha}}

      - name: Run the action
        uses: guibranco/github-status-action-v2@0849440ec82c5fa69b2377725b9b7852a3977e76 # v1.1.13
        if: env.COVERAGESTATUS == '1'
        with:
          authToken: ${{secrets.GITHUB_TOKEN}}
          context: 'Test coverage results'
          description: 'Some branches or functions are not covered with unit tests'
          state: 'failure'
          sha: ${{github.event.pull_request.head.sha || github.sha}}

      - name: Update PR
        if: env.CHANGELEVEL != ''
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7
        with:
          script: |
            const updatePr = require('./scripts/update-pr/dist/scripts/update-pr/src/main.js')
            await updatePr({ github, context })
