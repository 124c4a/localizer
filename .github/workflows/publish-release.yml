name: Publish release

on:
  workflow_dispatch:
    inputs:
      dryRun:
        description: 'Run the release in dry run mode'
        required: false
        default: 'true'

permissions:
  contents: write
  pull-requests: write
  id-token: write

jobs:
  main:
    environment: npm

    name: Release version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: https://registry.npmjs.org/
          cache: 'npm'

      - run: npm ci --legacy-peer-deps
      - uses: nrwl/nx-set-shas@v4

      - name: Copy README.md file from root to packages subfolders
        run: |
          find packages -maxdepth 1 -type d -not -name '.*' -exec cp README.md {}/ \;

      - name: Build
        run: npx nx run-many -t build

      - name: Get tag from package.json
        id: latest-tag
        run: |
          version=$(node -p "require('./package.json').version")
          echo "tag=v$version" >> $GITHUB_OUTPUT

      - name: Release
        run: |
          node scripts/analyze-changes/dist/main.js --baseRef=${{ steps.latest-tag.outputs.tag && steps.latest-tag.outputs.tag || 'HEAD' }} --headRef=HEAD
          echo "CHANGELEVEL=$(cat tmp/CHANGELEVEL)" >> $GITHUB_ENV
          echo "MODULES=$(cat tmp/MODULES)" >> $GITHUB_ENV

      - run: npx nx release ${{ env.CHANGELEVEL }} ${{ steps.latest-tag.outputs.tag && '' || '--first-release' }} ${{ github.event.inputs.dryRun == 'true' && '--dryRun' }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_ACCESS_TOKEN }}
          NPM_CONFIG_PROVENANCE: true
